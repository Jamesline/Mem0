name: ci

on:
  push:
    branches: [main]
    paths:
      - 'mem0/**'
      - 'tests/**'
      - 'embedchain/**'
      - 'embedchain/tests/**'
      - 'embedchain/examples/**'
  pull_request:
    paths:
      - 'mem0/**'
      - 'tests/**'
      - 'embedchain/**'
      - 'embedchain/tests/**'
      - 'embedchain/examples/**'

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.9", "3.10", "3.11"]
        include:
          - path: mem0
          - path: embedchain

    steps:
      - uses: actions/checkout@v3
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install poetry
        uses: snok/install-poetry@v1
        with:
          version: 1.4.2
          virtualenvs-create: true
          virtualenvs-in-project: true

      - name: Load cached venv
        id: cached-poetry-dependencies
        uses: actions/cache@v2
        with:
          path: .venv
          key: venv-${{ runner.os }}-${{ hashFiles('**/poetry.lock') }}

      - name: Install dependencies
        run: |
          if [ "${{ matrix.path }}" == "mem0" ]; then
            make install_all
          else
            cd embedchain && make install_all
          fi
        if: steps.cached-poetry-dependencies.outputs.cache-hit != 'true'

      - name: Lint with ruff
        run: |
          if [ "${{ matrix.path }}" == "mem0" ]; then
            make lint
          else
            cd embedchain && make lint
          fi

      - name: Run tests and generate coverage report
        run: |
          if [ "${{ matrix.path }}" == "mem0" ]; then
            make coverage
          else
            cd embedchain && make coverage
          fi

      - name: Upload coverage reports to Codecov
        uses: codecov/codecov-action@v3
        with:
          file: coverage.xml
        env:
          CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}
